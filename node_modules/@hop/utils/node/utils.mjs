/*=====================================================================*/
/*    .../project/hop/hop/node_modules/@hop/utils/node/utils.mjs       */
/*    -------------------------------------------------------------    */
/*    Author      :  Manuel Serrano                                    */
/*    Creation    :  Sun Jan 17 07:28:22 2021                          */
/*    Last change :  Wed Aug 27 08:32:05 2025 (serrano)                */
/*    Copyright   :  2021-25 Manuel Serrano                            */
/*    -------------------------------------------------------------    */
/*    Hop utils functions                                              */
/*=====================================================================*/
"use hopscript"

/*---------------------------------------------------------------------*/
/*    hex ...                                                          */
/*---------------------------------------------------------------------*/
const hex = "0123456789abcdef";

/*---------------------------------------------------------------------*/
/*    genuuid ...                                                      */
/*    -------------------------------------------------------------    */
/*    UUID generation                                                  */
/*    See: http://www.ietf.org/rfc/rfc4122.txt                         */
/*                                                                     */
/*    Version 4 UUID, see section 4.4                                  */
/*                                                                     */
/*      0                   1                   2                   3  */
/*    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1  */
/*   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
/*   |                          time_low                             | */
/*   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
/*   |       time_mid                |         time_hi_and_version   | */
/*   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
/*   |clk_seq_hi_res |  clk_seq_low  |         node (0-1)            | */
/*   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
/*   |                         node (2-5)                            | */
/*   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ */
/*                                                                     */
/*---------------------------------------------------------------------*/
export function genuuid() {

   function random() {
      return Math.floor(Math.random() * 65536);
   }
   
   function bitField(bb, be, n) {
      return n >> be & ((1 << bb) - 1);
   }

   function string128(...chars) {
      return chars.join("");
   }
   
   const cur = Date.now() / 1000;
   const n1 = cur ^ random();
   const n2 = random();
   const n3 = random();
   const n4 = random();
   const n5 = random();
   const n6 = random();
   const n7 = random();
   const n8 = random();

   return string128(
      // time_lo
      hex[bitField(4, 12, n1)],
      hex[bitField(4, 8, n1)],
      hex[bitField(4, 4, n1)],
      hex[bitField(4, 0, n1)],
      hex[bitField(4, 12, n2)],
      hex[bitField(4, 8, n2)],
      hex[bitField(4, 4, n2)],
      hex[bitField(4, 0, n2)],
      "-",
      // time_mid
      hex[bitField(4, 12, n3)],
      hex[bitField(4, 8, n3)],
      hex[bitField(4, 4, n3)],
      hex[bitField(4, 0, n3)],
      "-",
      // time_hi_and_version
      hex[4],
      hex[bitField(4, 8, n4)],
      hex[bitField(4, 4, n4)],
      hex[bitField(4, 0, n4)],
      "-",
      // clock_seq_hi_and_reserved
      hex[bitField(2, 12, n5) | 8],
      hex[bitField(4, 8, n5)],
      // clock_seq_low
      hex[bitField(4, 4, n5)],
      hex[bitField(4, 0, n5)],
      "-",
      // node
      hex[bitField(4, 12, n6)],
      hex[bitField(4, 8, n6)],
      hex[bitField(4, 4, n6)],
      hex[bitField(4, 0, n6)],
      hex[bitField(4, 12, n7)],
      hex[bitField(4, 8, n7)],
      hex[bitField(4, 4, n7)],
      hex[bitField(4, 0, n7)],
      hex[bitField(4, 12, n8)],
      hex[bitField(4, 8, n8)],
      hex[bitField(4, 4, n8)],
      hex[bitField(4, 0, n8)]);
}

