#*=====================================================================*/
#*    serrano/prgm/project/hop/hop/node_modules/Makefile.scoped        */
#*    -------------------------------------------------------------    */
#*    Author      :  Manuel Serrano                                    */
#*    Creation    :  Tue May 28 09:58:13 2024                          */
#*    Last change :  Fri May 16 18:15:12 2025 (serrano)                */
#*    Copyright   :  2024-25 Manuel Serrano                            */
#*    -------------------------------------------------------------    */
#*    Common Makefile part for scoped modules                          */
#*=====================================================================*/

#*---------------------------------------------------------------------*/
#*    Global installation variables                                    */
#*---------------------------------------------------------------------*/
BOOTLIBDIR=$(BUILDDIR)/node_module/$(PACKAGE)/hop
INSTALLDIR=$(DESTDIR)$(HOPLIBDIR)/hop/$(HOPRELEASE)/node_modules/$(SCOPE)/$(PACKAGE)
LDINSTALLNAMEDIR=$(INSTALLDIR)/hop/so/$(HOPRELEASE)/$(HOPBUILDTAG)/$(MACH)

#*---------------------------------------------------------------------*/
#*    installation rules                                               */
#*---------------------------------------------------------------------*/
mkdirs:
	$(MAKE) mkdir DIR=$(LDINSTALLNAMEDIR)
	$(MAKE) mkdir DIR=$(INSTALLDIR)/type

install-so:
	$(INSTALL) o/$(TARGETNAME).$(SHAREDSUFFIX) $(LDINSTALLNAMEDIR)
	touch $(LDINSTALLNAMEDIR)/$(TARGETNAME).$(SHAREDSUFFIX)
	chmod $(MODEXE) $(LDINSTALLNAMEDIR)/$(TARGETNAME).$(SHAREDSUFFIX)

cleanup:
	rm -rf $(DESTDIR)$(HOPLIBDIR)/$(HOPFILDIR)/node_modules/$(PACKAGE)/node
	touch $(DESTDIR)$(HOPLIBDIR)/$(HOPFILDIR)/node_modules/$(PACKAGE)/hop/_~
	rm -rf $(DESTDIR)$(HOPLIBDIR)/$(HOPFILDIR)/node_modules/$(PACKAGE)/hop/*~

uninstall:
	$(MAKE) uninstall-module TARGETNAME=$(SCOPE)/$(PACKAGE)
	$(MAKE) uninstall-module TARGETNAME=$(SCOPE)/_$(PACKAGE)

uninstall-module:
	rm -rf $(INSTALLDIR) 

#*---------------------------------------------------------------------*/
#*    lib                                                              */
#*---------------------------------------------------------------------*/
o:
	mkdir o

o/$(TARGETNAME).$(SHAREDSUFFIX): $(OBJECTS)
	$(MAKE) shared-lib \
             LDINSTALLNAMEDIR=$(LDINSTALLNAMEDIR) \
             BOOTLIBDIR=$(BOOTLIBDIR) \
             FORCELD=true \
             LIBDEST=$@ \
             SONAME=$(TARGETNAME).$(SHAREDSUFFIX) \
             LDOPTS="-L$(BUILDLIBDIR) -L$(BIGLOOLIBDIR) $(LDOPTS)" \
	     BIGLOOAPPLIBS=$(BIGLOOAPPLIBS) \
	     BIGLOOEXTRAAPPLIBS=$(BIGLOOEXTRAAPPLIBS)

#*---------------------------------------------------------------------*/
#*    postbuild                                                        */
#*---------------------------------------------------------------------*/
postbuild:

#*---------------------------------------------------------------------*/
#*    clean                                                            */
#*---------------------------------------------------------------------*/
clean:
	$(RM) -rf o

devclean:


distclean: devclean
	$(RM) -f config.mjs

#*---------------------------------------------------------------------*/
#*    Suffixes                                                         */
#*---------------------------------------------------------------------*/
.SUFFIXES:
.SUFFIXES: .scm .o .hop .mjs

#*---------------------------------------------------------------------*/
#*    The implicit rules                                               */
#*---------------------------------------------------------------------*/
o/%.o: %.scm
	@ $(call compile2,$(BIGLOO),$(BCFLAGS),$(BLFLAGS),-c,$< -o $@)

o/%.o: %.hop
	@ $(call compile3,$(HOPC), $(HFLAGS), $(BCFLAGS) -dload-sym,$(BLFLAGS)$(BCFLAGSMODULES),-c,$< -o $@)

%.scm: %.hop
	@ $(call compile3,$(HOPC),$(HFLAGS),$(BCFLAGS),$(BLFLAGS),-s,$< -o $@)

o/%.o: %.mjs
	@ $(call compile3,$(HOPC),$(HSFLAGS),$(BCFLAGS) -fno-inlining -copt -Os -dload-sym,$(BLFLAGS),$(BHOPCFLAGS) -c -fno-inlining --js-no-module-main --js-module-name __hopjs_$(PACKAGE)_$* --js-module-path $* -O2s,$< -o $@)
