;*=====================================================================*/
;*    .../project/hop/3.1.x/node_modules/syslog/lib/_syslog.hop        */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Sun Jul  6 06:15:53 2014                          */
;*    Last change :  Mon Oct  3 07:21:53 2016 (serrano)                */
;*    Copyright   :  2014-16 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    SYSLOG JS bindings                                               */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module _syslog

   (library hopscript hop hopwidget nodejs)
   
   (export (class SyslogInclude
	      (val read-only)))
   
   (export (hopscript ::JsGlobalObject ::JsObject ::JsObject ::JsObject)))

;*---------------------------------------------------------------------*/
;*    hopscript ...                                                    */
;*---------------------------------------------------------------------*/
(define (hopscript %this this scope module)

   (define (js-tofixnum n %this)
      (let ((n (js-tointeger n %this)))
	 (cond
	    ((fixnum? n) n)
	    ((flonum? n) (flonum->fixnum n))
	    (else 0))))
   
   (with-access::JsGlobalObject %this (__proto__)

      (define exports (js-get module 'exports %this))
      
      ;; bind the module in the syslog scope
      (js-put! scope 'module module #f %this)
      
      ;; open
      (js-bind! %this exports 'open
	 :value (js-make-function %this
		   (lambda (this name option facility)
		      (openlog (js-tostring name %this)
			 (js-tofixnum option %this)
			 (js-tofixnum facility %this)))
		   3 'open)
	 :writable #f
	 :enumerable #f)
      ;; log
      (js-bind! %this exports 'log
	 :value (js-make-function %this
		   (lambda (this level msg)
		      (syslog (js-tofixnum level %this)
			 (js-tostring msg %this)))
		   2 'log)
	 :writable #f
	 :enumerable #f)
      ;; close objects
      (js-bind! %this exports 'close
	 :value (js-make-function %this
		   (lambda (this val)
		      (closelog))
		   0 'close)
	 :writable #f
	 :enumerable #f)
      
      ;; options
      (for-each (lambda (id)
		   (js-bind! %this exports id
		      :value (syslog-option id)
		      :writable #f
		      :enumerable #f))
	 '(LOG_CONS LOG_NDELAY LOG_ODELAY LOG_PID))
      
      ;; facilities
      (for-each (lambda (id)
		   (js-bind! %this exports id
		      :value (syslog-facility id)
		      :writable #f
		      :enumerable #f))
	 '(LOG_AUTH LOG_AUTHPRIV LOG_CRON LOG_DAEMON LOG_FTP LOG_KERN
	   LOG_LOCAL0 LOG_LOCAL1 LOG_LOCAL2 LOG_LOCAL3 LOG_LOCAL4
	   LOG_LOCAL5 LOG_LOCAL6 LOG_LOCAL7
	   LOG_LPR LOG_MAIL LOG_NEWS LOG_SYSLOG LOG_USER LOG_UUCP))
      
      ;; levels
      (for-each (lambda (id)
		   (js-bind! %this exports id
		      :value (syslog-level id)
		      :writable #f
		      :enumerable #f))
	 '(LOG_EMERG LOG_ALERT LOG_CRIT LOG_ERR LOG_WARNING LOG_NOTICE
	   LOG_INFO LOG_DEBUG))))

;*---------------------------------------------------------------------*/
;*    The return value for dynamic-load                                */
;*---------------------------------------------------------------------*/
hopscript

