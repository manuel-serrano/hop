;*=====================================================================*/
;*    serrano/prgm/project/hop/3.1.x/etc/configure.scm.in              */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Fri Feb 18 17:29:47 2000                          */
;*    Last change :  Sun May 21 06:08:32 2017 (serrano)                */
;*    -------------------------------------------------------------    */
;*    HOP configuration                                                */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module __hop_configure
   
   (include "configure_@HOPARCH@.sch")
   
   (export  (hop-configure ::bstring)
	    (hop-name)
	    (hop-version)
	    (hop-branch)
	    (hop-backend)
	    (hop-url)
	    (inline hop-bigloo)
	    (inline hop-bin-directory)
	    (inline hop-lib-directory)
	    (inline hop-etc-directory)
	    (inline hop-share-directory)
	    (inline hop-doc-directory)
	    (inline hop-contribs-directory)
	    (inline hop-weblets-directory)
	    (hop-library-path)
	    (inline hop-mime-types-file)
	    (inline hop-configure-css-mime-type)
	    (inline hop-runtime-system::pair)
	    (inline hop-runtime-system-files::pair)
	    (inline hop-service-base::bstring)
	    (hop-configure-rc-directory)
	    (hop-configure-var-directory)
	    (hop-configure-cache-directory)
	    (hop-srfis::pair-nil)
	    (hop-zeroconf-default)
	    (hop-build-id)
	    (hop-build-tag))
   
   (eval    (export hop-name)
	    (export hop-version)
	    (export hop-branch)
	    (export hop-backend)
	    (export hop-url)
	    (export hop-bigloo)
	    (export hop-etc-directory)
	    (export hop-bin-directory)
	    (export hop-lib-directory)
	    (export hop-share-directory)
	    (export hop-doc-directory)
	    (export hop-contribs-directory)
	    (export hop-weblets-directory)
	    (export hop-library-path)
	    (export hop-mime-types-file)
	    (export hop-configure-css-mime-type)
	    (export hop-runtime-system)
	    (export hop-runtime-system-files)
	    (export hop-service-base)
	    (export hop-configure-rc-directory)
	    (export hop-configure-var-directory)
	    (export hop-configure-cache-directory)
	    (export hop-srfis)
	    (export hop-zeroconf-default)
	    (export hop-build-id)
	    (export hop-build-tag)))

;*---------------------------------------------------------------------*/
;*    hop-configure ...                                                */
;*---------------------------------------------------------------------*/
(define (hop-configure config)
   (case (string->symbol config)
      ((--version)
       (print (hop-version)))
      ((--branch)
       (print (hop-branch)))
      ((--backend)
       (print (hop-backend)))
      ((--etcdir)
       (print (hop-etc-directory)))
      ((--bindir)
       (print (hop-bin-directory)))
      ((--libdir)
       (print (hop-lib-directory)))
      ((--sharedir)
       (print (hop-share-directory)))
      ((--docdir)
       (print (hop-doc-directory)))
      ((--contribsdir)
       (print (hop-contribs-directory)))
      ((--webletsdir)
       (print (hop-weblets-directory)))
      ((--library-path)
       (print (hop-library-path)))
      ((--mimetypes)
       (print (hop-mime-types-file)))
      ((--css-mime-type)
       (print (hop-configure-css-mime-type)))
      ((--url)
       (print (hop-url)))
      ((--hop-runtime-system)
       (print (hop-runtime-system)))
      ((--hop-runtime-system-files)
       (print (hop-runtime-system-files)))
      ((--hop-service-base)
       (print (hop-service-base)))
      ((--bigloo)
       (print (hop-bigloo)))
      ((--build-id)
       (print (hop-build-id)))
      ((--build-tag)
       (print (hop-build-tag)))
      (else
       (with-output-to-port (current-error-port)
	  (lambda ()
	     (print "usage: hop --configure [OPTION]")
	     (newline)
	     (print "Option:")
	     (print "  [--version]")
	     (print "  [--branch]")
	     (print "  [--backend]")
	     (print "  [--etcdir]")
	     (print "  [--bindir]")
	     (print "  [--libdir]")
	     (print "  [--sharedir]")
	     (print "  [--docdir]")
	     (print "  [--contribsdir]")
             (print "  [--webletsdir]")
	     (print "  [--library-path]")
             (print "  [--mimetypes]")
             (print "  [--javascript-mime-type]")
             (print "  [--css-mime-type]")
	     (print "  [--url]")
	     (print "  [--bigloo]")
	     (print "  [--build-id]")
	     (print "  [--build-tag]"))))))
	     
;*---------------------------------------------------------------------*/
;*    Name and version                                                 */
;*---------------------------------------------------------------------*/
(define (hop-name) "Hop")
(define (hop-version) "@VERSION@")
(define (hop-branch) "@BRANCH@")
(define (hop-backend) "@BACKEND@")
(define (hop-url) "@URL@")

(define (hop-build-id) "@BUILDID@")
(define (hop-build-tag) "@BUILDTAG@")

;*---------------------------------------------------------------------*/
;*    Misc ...                                                         */
;*---------------------------------------------------------------------*/
(define-inline (hop-mime-types-file) "@MIMETYPES@")
(define-inline (hop-configure-css-mime-type) "@CSSMIMETYPE@")

;*---------------------------------------------------------------------*/
;*    hop-runtime-system ...                                           */
;*---------------------------------------------------------------------*/
(define-inline (hop-runtime-system) '(@HOPJSSANSSUFFIX@))
(define-inline (hop-runtime-system-files) '(@HOPJSFILES@))

;*---------------------------------------------------------------------*/
;*    hop-service-base ...                                             */
;*    -------------------------------------------------------------    */
;*    The prefix of all HOP weblets.                                   */
;*---------------------------------------------------------------------*/
(define-inline (hop-service-base) "@HOPSERVICEBASE@")

;*---------------------------------------------------------------------*/
;*    hop-srfis ...                                                    */
;*---------------------------------------------------------------------*/
(define (hop-srfis) 
   (list-copy '(@HOPSRFIS@ hop hop-@BRANCH@ hop-@VERSION@)))

;*---------------------------------------------------------------------*/
;*    hop-zeroconf-default ...                                         */
;*---------------------------------------------------------------------*/
(define (hop-zeroconf-default) @HOPZEROCONF@)
