;*=====================================================================*/
;*    serrano/prgm/project/hop/3.1.x/runtime/html_base.scm             */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Fri Apr 23 08:11:51 2010                          */
;*    Last change :  Wed May 25 18:53:11 2016 (serrano)                */
;*    Copyright   :  2010-16 Manuel Serrano                            */
;*    -------------------------------------------------------------    */
;*    HTML tags                                                        */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module __hop_html-base

   (include "param.sch"
	    "xml.sch")

   (import  __hop_xml-types
	    __hop_xml
	    __hop_security
	    __hop_types)

   (export  (<A> . ::obj)
	    (<ABBR> . ::obj)
	    (<ACRONYM> . ::obj)
	    (<ADDRESS> . ::obj)
	    (<APPLET> . ::obj)
	    (<AREA> . ::obj)
	    (<B> . ::obj)
	    (<BASE> . ::obj)
	    (<BASEFONT> . ::obj)
	    (<BDO> . ::obj)
	    (<BIG> . ::obj)
	    (<BLOCKQUOTE> . ::obj)
	    (<BODY> . ::obj)
	    (<BR> . ::obj)
	    (<BUTTON> . ::obj)
	    (<CANVAS> . ::obj)
	    (<CAPTION> . ::obj)
	    (<CENTER> . ::obj)
	    (<CITE> . ::obj)
	    (<CODE> . ::obj)
	    (<COL> . ::obj)
	    (<COLGROUP> . ::obj)
	    (<DATALIST> . ::obj)
	    (<DD> . ::obj)
	    (<DEL> . ::obj)
	    (<DFN> . ::obj)
	    (<DIR> . ::obj)
 	    (<DIV> . ::obj)
	    (<DL> . ::obj)
	    (<DT> . ::obj)
	    (<EM> . ::obj)
	    (<EMBED> . ::obj)
	    (<FIELDSET> . ::obj)
	    (<FIGURE> . ::obj)
	    (<FIGCAPTION> . ::obj)
	    (<FONT> . ::obj)
	    (<FOOTER> . ::obj)
	    (<FORM> . ::obj)
	    (<FRAME> . ::obj)
	    (<FRAMESET> . ::obj)
	    (<H1> . ::obj)
	    (<H2> . ::obj)
	    (<H3> . ::obj)
	    (<H4> . ::obj)
	    (<H5> . ::obj)
	    (<H6> . ::obj)
	    (<HR> . ::obj)
	    (<HEADER> . ::obj)
	    (<HGROUP> . ::obj)
	    (<I> . ::obj)
	    (<IFRAME> . ::obj)
	    (<INPUT> . ::obj)
	    (<INS> . ::obj)
	    (<ISINDEX> . ::obj)
	    (<KBD> . ::obj)
	    (<LABEL> . ::obj)
	    (<LEGEND> . ::obj)
	    (<LI> . ::obj)
	    (<MAP> . ::obj)
	    (<MARQUEE> . ::obj)
	    (<MENU> . ::obj)
	    (<META> . ::obj)
	    (<METER> . ::obj)
	    (<NAV> . ::obj)
	    (<NOFRAMES> . ::obj)
	    (<NOSCRIPT> . ::obj)
	    (<OBJECT> . ::obj)
	    (<OL> . ::obj)
	    (<OPTGROUP> . ::obj)
	    (<OPTION> . ::obj)
	    (<P> . ::obj)
	    (<PARAM> . ::obj)
	    (<PRE> . ::obj)
	    (<PROGRESS> . ::obj)
	    (<Q> . ::obj)
	    (<S> . ::obj)
	    (<SAMP> . ::obj)
	    (<SECTION> . ::obj)
	    (<SELECT> . ::obj)
	    (<SMALL> . ::obj)
	    (<SOURCE> . ::obj)
	    (<SPAN> . ::obj)
	    (<STRIKE> . ::obj)
	    (<STRONG> . ::obj)
	    (<SUB> . ::obj)
	    (<SUP> . ::obj)
	    (<TABLE> . ::obj)
	    (<TBODY> . ::obj)
	    (<TD> . ::obj)
	    (<TEXTAREA> . ::obj)
	    (<TFOOT> . ::obj)
	    (<TH> . ::obj)
	    (<THEAD> . ::obj)
	    (<TITLE> . ::obj)
	    (<TR> . ::obj)
	    (<TRACK> . ::obj)
	    (<TT> . ::obj)
	    (<U> . ::obj)
	    (<UL> . ::obj)
	    (<VAR> . ::obj)))
   
;*---------------------------------------------------------------------*/
;*    HTML 4.01 elements ...                                           */
;*---------------------------------------------------------------------*/
(define-xml-element <A>)
(define-xml-element <ABBR>)
(define-xml-element <ACRONYM>)
(define-xml-element <ADDRESS>)
(define-xml-element <APPLET>)
(define-xml xml-empty-element #t <AREA>)
(define-xml-element <B>)
(define-xml xml-empty-element #t <BASE>)
(define-xml xml-empty-element #t <BASEFONT>)
(define-xml-element <BDO>)
(define-xml-element <BIG>)
(define-xml-element <BLOCKQUOTE>)
(define-xml-element <BODY>)
(define-xml xml-empty-element #t <BR>)
(define-xml-element <BUTTON>)
(define-xml-element <CANVAS>)
(define-xml-element <CAPTION>)
(define-xml-element <CENTER>)
(define-xml-element <CITE>)
(define-xml-element <CODE>)
(define-xml xml-empty-element #t <COL>)
(define-xml-element <COLGROUP>)
(define-xml-element <DATALIST>)
(define-xml-element <DD>)
(define-xml-element <DEL>)
(define-xml-element <DFN>)
(define-xml-element <DIR>)
(define-xml-element <DIV>)
(define-xml-element <DL>)
(define-xml-element <DT>)
(define-xml-element <EM>)
(define-xml-element <EMBED>)
(define-xml-element <FIELDSET>)
(define-xml-element <FIGURE>)
(define-xml-element <FIGCAPTION>)
(define-xml-element <FONT>)
(define-xml-element <FOOTER>)
(define-xml xml-empty-element #t <FRAME>)
(define-xml-element <FRAMESET>)
(define-xml-element <H1>)
(define-xml-element <H2>)
(define-xml-element <H3>)
(define-xml-element <H4>)
(define-xml-element <H5>)
(define-xml-element <H6>)
(define-xml xml-empty-element #t <HR>)
(define-xml-element <HEADER>)
(define-xml-element <HGROUP>)
(define-xml-element <I>)
(define-xml-element <IFRAME>)
(define-xml-element <INS>)
(define-xml-element <ISINDEX>)
(define-xml-element <KBD>)
(define-xml-element <LABEL>)
(define-xml-element <LEGEND>)
(define-xml-element <LI>)
(define-xml-element <MAP>)
(define-xml-element <MARQUEE>)
(define-xml-element <MENU>)
(define-xml-element <METER>)
(define-xml-element <NAV>)
(define-xml-element <NOFRAMES>)
(define-xml-element <NOSCRIPT>)
(define-xml-element <OBJECT>)
(define-xml-element <OL>)
(define-xml-element <OPTGROUP>)
(define-xml-element <OPTION>)
(define-xml-element <P>)
(define-xml xml-empty-element #t <PARAM>)
(define-xml-element <PRE>)
(define-xml-element <PROGRESS>)
(define-xml-element <Q>)
(define-xml-element <S>)
(define-xml-element <SAMP>)
(define-xml-element <SECTION>)
(define-xml-element <SELECT>)
(define-xml-element <SMALL>)
(define-xml-element <SOURCE>)
(define-xml-element <SPAN>)
(define-xml-element <STRIKE>)
(define-xml-element <STRONG>)
(define-xml-element <SUB>)
(define-xml-element <SUP>)
(define-xml-element <TABLE>)
(define-xml-element <TBODY>)
(define-xml-element <TD>)
(define-xml-element <TEXTAREA>)
(define-xml-element <TFOOT>)
(define-xml-element <TH>)
(define-xml-element <THEAD>)
(define-xml-markup <TITLE>)
(define-xml-element <TR>)
(define-xml-element <TRACK>)
(define-xml-element <TT>)
(define-xml-element <U>)
(define-xml-element <UL>)
(define-xml-element <VAR>)

;*---------------------------------------------------------------------*/
;*    <META> ...                                                       */
;*---------------------------------------------------------------------*/
(define-tag <META> ((content #f)
		    (attrs)
		    body)
   (instantiate::xml-meta
      (tag 'meta)
      (attributes attrs)
      (content (xml-primitive-value content))
      (body body)))

;*---------------------------------------------------------------------*/
;*    <FORM> ...                                                       */
;*---------------------------------------------------------------------*/
(define-tag <FORM> ((id #unspecified)
		    (onsubmit #f)
		    (onreset #f)
		    (action #f)
		    (attrs)
		    body)
   (let* ((attrs (cond
		    ((isa? onsubmit xml-tilde)
		     `(:onsubmit ,(xml-tilde->return onsubmit) ,@attrs))
		    (onsubmit
		     `(:onsubmit ,onsubmit ,@attrs))
		    (else
		     (map xml-primitive-value attrs))))
	  (attrs (cond
		    ((isa? onreset xml-tilde)
		     `(:onreset ,(xml-tilde->return onreset) ,@attrs))
		    (onreset
		     `(:onreset ,onreset ,@attrs))
		    (else
		     (map xml-primitive-value attrs))))
	  (attrs (cond
		    ((isa? action xml-tilde)
		     `(:action ,(format "javascript: ~a"
				   (xml-tilde->statement action))
			 ,@(map xml-primitive-value attrs)))
		    (action
		     `(:action ,action ,@attrs))
		    (else
		     (map xml-primitive-value attrs)))))
      (instantiate::xml-element
	 (tag 'form)
	 (id (xml-make-id (xml-primitive-value id) 'FORM))
	 (attributes attrs)
	 (body body))))

;*---------------------------------------------------------------------*/
;*    <INPUT> ...                                                      */
;*---------------------------------------------------------------------*/
(define-tag <INPUT> ((id #unspecified)
		     (type 'text)
		     (onkeydown #f)
		     (attributes))
   (if (or (eq? type 'url) (equal? type "url"))
       (let* ((id (xml-make-id (xml-primitive-value id) 'input))
	      (comp "hop_inputurl_keydown( this, event )")
	      (onkeydown (if onkeydown
			     (format "~a; ~a" comp
				(if (isa? onkeydown xml-tilde)
				    (xml-tilde->statement onkeydown)
				    onkeydown))
			     comp)))
	  (instantiate::xml-empty-element
	     (tag 'input)
	     (id id)
	     (attributes `(:type ,type
			     :onkeydown ,(secure-javascript-attr onkeydown)
			     ,@(map xml-primitive-value attributes)))
	     (body '())))
       (instantiate::xml-empty-element
	  (tag 'input)
	  (id (xml-make-id (xml-primitive-value id) 'input))
	  (attributes `(type: ,type
			  ,@(if onkeydown
				`(onkeydown: ,(secure-javascript-attr onkeydown))
				'())
			  ,@(map xml-primitive-value attributes)))
	  (body '()))))
